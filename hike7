local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "FlyMenu"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 420, 0, 300)
frame.Position = UDim2.new(0.05, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Text = "Smooth Fly & Admin Panel (Ctrl to toggle)"
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

-- Left column: Personal controls
local leftCol = Instance.new("Frame")
leftCol.Size = UDim2.new(0, 200, 1, -40)
leftCol.Position = UDim2.new(0, 10, 0, 40)
leftCol.BackgroundTransparency = 1
leftCol.Parent = frame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Text = "Toggle Fly"
toggleBtn.Size = UDim2.new(0.9, 0, 0, 30)
toggleBtn.Position = UDim2.new(0.05, 0, 0.05, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(80, 150, 250)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.SourceSans
toggleBtn.TextSize = 18
toggleBtn.Parent = leftCol

local jumpBtn = Instance.new("TextButton")
jumpBtn.Text = "Jump Boost: OFF"
jumpBtn.Size = UDim2.new(0.9, 0, 0, 30)
jumpBtn.Position = UDim2.new(0.05, 0, 0.2, 0)
jumpBtn.BackgroundColor3 = Color3.fromRGB(250, 150, 80)
jumpBtn.TextColor3 = Color3.new(1, 1, 1)
jumpBtn.Font = Enum.Font.SourceSans
jumpBtn.TextSize = 18
jumpBtn.Parent = leftCol

local speedLabel = Instance.new("TextLabel")
speedLabel.Text = "Speed: 50"
speedLabel.Size = UDim2.new(0.9, 0, 0, 25)
speedLabel.Position = UDim2.new(0.05, 0, 0.35, 0)
speedLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 16
speedLabel.Parent = leftCol

local plusBtn = Instance.new("TextButton")
plusBtn.Text = "+"
plusBtn.Size = UDim2.new(0.4, 0, 0, 30)
plusBtn.Position = UDim2.new(0.05, 0, 0.5, 0)
plusBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 100)
plusBtn.TextSize = 20
plusBtn.Parent = leftCol

local minusBtn = Instance.new("TextButton")
minusBtn.Text = "-"
minusBtn.Size = UDim2.new(0.4, 0, 0, 30)
minusBtn.Position = UDim2.new(0.55, 0, 0.5, 0)
minusBtn.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
minusBtn.TextSize = 20
minusBtn.Parent = leftCol

-- Right column: Admin player list
local rightCol = Instance.new("Frame")
rightCol.Size = UDim2.new(0, 200, 1, -40)
rightCol.Position = UDim2.new(0, 210, 0, 40)
rightCol.BackgroundTransparency = 1
rightCol.Parent = frame

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(0.9, 0, 0, 30)
searchBox.Position = UDim2.new(0.05, 0, 0, 0)
searchBox.PlaceholderText = "Search player..."
searchBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
searchBox.Font = Enum.Font.SourceSans
searchBox.TextSize = 16
searchBox.Parent = rightCol

local playerList = Instance.new("ScrollingFrame")
playerList.Size = UDim2.new(0.9, 0, 1, -40)
playerList.Position = UDim2.new(0.05, 0, 0, 40)
playerList.BackgroundTransparency = 1
playerList.ScrollBarThickness = 6
playerList.Parent = rightCol

local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 6)
listLayout.Parent = playerList

-- Fly Variables
local flying = false
local speed = 50
local acceleration = 5
local lv, att, align

-- Jump Boost Variables
local jumpBoost = false
local defaultJump = humanoid.UseJumpPower and humanoid.JumpPower or humanoid.JumpHeight
local boostAmount = defaultJump * 2

-- Movement control
local moveDir = Vector3.zero
local targetVel = Vector3.zero

-- Player fly states
local playerFlyStates = {} -- Tracks fly state for each player
local playerJumpStates = {} -- Tracks jump boost state for each player

-- Fly helpers
local function createFly(targetPlayer)
	local tChar = targetPlayer.Character
	if not tChar then return end
	local tHrp = tChar:FindFirstChild("HumanoidRootPart")
	if not tHrp then return end

	local att = Instance.new("Attachment")
	att.Name = "FlyAttachment_" .. targetPlayer.Name
	att.Parent = tHrp

	local lv = Instance.new("LinearVelocity")
	lv.Name = "FlyVelocity_" .. targetPlayer.Name
	lv.MaxForce = 1e6
	lv.Attachment0 = att
	lv.RelativeTo = Enum.ActuatorRelativeTo.World
	lv.Parent = tHrp

	local align = Instance.new("AlignOrientation")
	align.Name = "FlyAlign_" .. targetPlayer.Name
	align.Attachment0 = att
	align.Mode = Enum.OrientationAlignmentMode.OneAttachment
	align.Responsiveness = 200
	align.Parent = tHrp

	playerFlyStates[targetPlayer] = {lv = lv, att = att, align = align, moveDir = Vector3.zero, speed = 50}
end

local function destroyFly(targetPlayer)
	local state = playerFlyStates[targetPlayer]
	if state then
		if state.lv then state.lv:Destroy() end
		if state.att then state.att:Destroy() end
		if state.align then state.align:Destroy() end
		playerFlyStates[targetPlayer] = nil
	end
end

local function toggleFly()
	flying = not flying
	if flying then
		createFly(player)
		toggleBtn.Text = "Flying (Click to Stop)"
	else
		destroyFly(player)
		toggleBtn.Text = "Toggle Fly"
	end
end

-- Admin fly/jump helpers
local function applyJumpBoost(targetPlayer, enable)
	local tChar = targetPlayer.Character
	if not tChar then return end
	local tHum = tChar:FindFirstChildOfClass("Humanoid")
	if not tHum then return end

	if enable then
		if tHum.UseJumpPower then
			playerJumpStates[targetPlayer] = playerJumpStates[targetPlayer] or tHum.JumpPower
			tHum.JumpPower = boostAmount
		else
			playerJumpStates[targetPlayer] = playerJumpStates[targetPlayer] or tHum.JumpHeight
			tHum.JumpHeight = boostAmount
		end
	else
		local default = playerJumpStates[targetPlayer] or defaultJump
		if tHum.UseJumpPower then
			tHum.JumpPower = default
		else
			tHum.JumpHeight = default
		end
		playerJumpStates[targetPlayer] = nil
	end
end

-- Player list management
local function createPlayerEntry(p)
	local entry = Instance.new("Frame")
	entry.Size = UDim2.new(1, 0, 0, 60)
	entry.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	entry.Parent = playerList

	local nameLabel = Instance.new("TextLabel")
	nameLabel.Size = UDim2.new(0.6, -6, 1, 0)
	nameLabel.Position = UDim2.new(0, 6, 0, 0)
	nameLabel.Text = p.Name
	nameLabel.TextXAlignment = Enum.TextXAlignment.Left
	nameLabel.BackgroundTransparency = 1
	nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	nameLabel.Font = Enum.Font.SourceSans
	nameLabel.TextSize = 16
	nameLabel.Parent = entry

	local flyBtn = Instance.new("TextButton")
	flyBtn.Size = UDim2.new(0.38, -6, 0.4, -4)
	flyBtn.Position = UDim2.new(0.62, 0, 0.1, 0)
	flyBtn.Text = playerFlyStates[p] and "Stop Fly" or "Start Fly"
	flyBtn.BackgroundColor3 = Color3.fromRGB(80, 150, 250)
	flyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	flyBtn.Font = Enum.Font.SourceSans
	flyBtn.TextSize = 14
	flyBtn.Parent = entry

	local jumpBtn = Instance.new("TextButton")
	jumpBtn.Size = UDim2.new(0.38, -6, 0.4, -4)
	jumpBtn.Position = UDim2.new(0.62, 0, 0.55, 0)
	jumpBtn.Text = playerJumpStates[p] and "Remove Jump" or "Add Jump"
	jumpBtn.BackgroundColor3 = Color3.fromRGB(250, 150, 80)
	jumpBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	jumpBtn.Font = Enum.Font.SourceSans
	jumpBtn.TextSize = 14
	jumpBtn.Parent = entry

	flyBtn.MouseButton1Click:Connect(function()
		if playerFlyStates[p] then
			destroyFly(p)
			flyBtn.Text = "Start Fly"
		else
			createFly(p)
			flyBtn.Text = "Stop Fly"
		end
	end)

	jumpBtn.MouseButton1Click:Connect(function()
		local isBoosted = playerJumpStates[p] ~= nil
		applyJumpBoost(p, not isBoosted)
		jumpBtn.Text = isBoosted and "Add Jump" or "Remove Jump"
	end)

	return entry
end

local function refreshPlayerList(filter)
	playerList:ClearAllChildren()
	local y = 0
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			if not filter or filter == "" or p.Name:lower():find(filter:lower()) then
				local e = createPlayerEntry(p)
				y = y + 66
			end
		end
	end
	playerList.CanvasSize = UDim2.new(0, 0, 0, y)
end

-- GUI buttons
toggleBtn.MouseButton1Click:Connect(toggleFly)

jumpBtn.MouseButton1Click:Connect(function()
	jumpBoost = not jumpBoost
	if jumpBoost then
		if humanoid.UseJumpPower then
			humanoid.JumpPower = boostAmount
		else
			humanoid.JumpHeight = boostAmount
		end
		jumpBtn.Text = "Jump Boost: ON"
	else
		if humanoid.UseJumpPower then
			humanoid.JumpPower = defaultJump
		else
			humanoid.JumpHeight = defaultJump
		end
		jumpBtn.Text = "Jump Boost: OFF"
	end
end)

plusBtn.MouseButton1Click:Connect(function()
	speed += 10
	speedLabel.Text = "Speed: " .. speed
end)

minusBtn.MouseButton1Click:Connect(function()
	if speed > 10 then
		speed -= 10
		speedLabel.Text = "Speed: " .. speed
	end
end)

searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	refreshPlayerList(searchBox.Text)
end)

-- Keyboard movement
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.W then moveDir = Vector3.new(moveDir.X, moveDir.Y, 1) end
	if input.KeyCode == Enum.KeyCode.S then moveDir = Vector3.new(moveDir.X, moveDir.Y, -1) end
	if input.KeyCode == Enum.KeyCode.A then moveDir = Vector3.new(-1, moveDir.Y, moveDir.Z) end
	if input.KeyCode == Enum.KeyCode.D then moveDir = Vector3.new(1, moveDir.Y, moveDir.Z) end
	if input.KeyCode == Enum.KeyCode.Space then moveDir = Vector3.new(moveDir.X, 1, moveDir.Z) end
	if input.KeyCode == Enum.KeyCode.LeftShift then moveDir = Vector3.new(moveDir.X, -1, moveDir.Z) end
	if input.KeyCode == Enum.KeyCode.LeftControl then
		frame.Visible = not frame.Visible
	end
end)

UIS.InputEnded:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.W or input.KeyCode == Enum.KeyCode.S then moveDir = Vector3.new(moveDir.X, moveDir.Y, 0) end
	if input.KeyCode == Enum.KeyCode.A or input.KeyCode == Enum.KeyCode.D then moveDir = Vector3.new(0, moveDir.Y, moveDir.Z) end
	if input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.LeftShift then moveDir = Vector3.new(moveDir.X, 0, moveDir.Z) end
end)

-- Smooth fly loop for all players
RS.RenderStepped:Connect(function(dt)
	for targetPlayer, state in pairs(playerFlyStates) do
		local tChar = targetPlayer.Character
		if tChar and state.lv and state.att then
			local tHrp = tChar:FindFirstChild("HumanoidRootPart")
			if tHrp then
				local cam = targetPlayer == player and workspace.CurrentCamera or tHrp.CFrame
				local dir = (cam.RightVector * state.moveDir.X) + (cam.UpVector * state.moveDir.Y) + (cam.LookVector * state.moveDir.Z)
				if dir.Magnitude > 0 then dir = dir.Unit end
				targetVel = dir * state.speed
				state.lv.VectorVelocity = state.lv.VectorVelocity:Lerp(targetVel, math.clamp(acceleration * dt, 0, 1))
				state.align.CFrame = cam
			else
				destroyFly(targetPlayer)
			end
		end
	end
end)

-- Player join/leave handling
Players.PlayerAdded:Connect(function(p)
	refreshPlayerList(searchBox.Text)
end)

Players.PlayerRemoving:Connect(function(p)
	destroyFly(p)
	applyJumpBoost(p, false)
	refreshPlayerList(searchBox.Text)
end)

-- Initial player list population
refreshPlayerList()
