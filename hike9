--// Services
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RS = game:GetService("RunService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

--// GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "FlyMenu"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 420, 0, 320)
frame.Position = UDim2.new(0.05, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Text = "Smooth Fly & Admin Panel (Ctrl to toggle)"
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Text = "X"
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -30, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(150, 50, 50)
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 16
closeBtn.Parent = frame

closeBtn.MouseButton1Click:Connect(function()
	frame.Visible = false
end)

-- Left column: Personal controls
local leftCol = Instance.new("Frame")
leftCol.Size = UDim2.new(0, 200, 1, -40)
leftCol.Position = UDim2.new(0, 10, 0, 40)
leftCol.BackgroundTransparency = 1
leftCol.Parent = frame

local toggleBtn = Instance.new("TextButton")
toggleBtn.Text = "Toggle Fly"
toggleBtn.Size = UDim2.new(0.9, 0, 0, 30)
toggleBtn.Position = UDim2.new(0.05, 0, 0.05, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(80, 150, 250)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.SourceSans
toggleBtn.TextSize = 18
toggleBtn.Parent = leftCol

local jumpBtn = Instance.new("TextButton")
jumpBtn.Text = "Jump Boost: Normal"
jumpBtn.Size = UDim2.new(0.9, 0, 0, 30)
jumpBtn.Position = UDim2.new(0.05, 0, 0.2, 0)
jumpBtn.BackgroundColor3 = Color3.fromRGB(250, 150, 80)
jumpBtn.TextColor3 = Color3.new(1, 1, 1)
jumpBtn.Font = Enum.Font.SourceSans
jumpBtn.TextSize = 18
jumpBtn.Parent = leftCol

local speedLabel = Instance.new("TextLabel")
speedLabel.Text = "Speed: 50"
speedLabel.Size = UDim2.new(0.9, 0, 0, 25)
speedLabel.Position = UDim2.new(0.05, 0, 0.35, 0)
speedLabel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
speedLabel.TextColor3 = Color3.new(1, 1, 1)
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 16
speedLabel.Parent = leftCol

local plusBtn = Instance.new("TextButton")
plusBtn.Text = "+"
plusBtn.Size = UDim2.new(0.4, 0, 0, 30)
plusBtn.Position = UDim2.new(0.05, 0, 0.5, 0)
plusBtn.BackgroundColor3 = Color3.fromRGB(100, 200, 100)
plusBtn.TextSize = 20
plusBtn.Parent = leftCol

local minusBtn = Instance.new("TextButton")
minusBtn.Text = "-"
minusBtn.Size = UDim2.new(0.4, 0, 0, 30)
minusBtn.Position = UDim2.new(0.55, 0, 0.5, 0)
minusBtn.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
minusBtn.TextSize = 20
minusBtn.Parent = leftCol

local espBtn = Instance.new("TextButton")
espBtn.Text = "ESP: OFF"
espBtn.Size = UDim2.new(0.9, 0, 0, 30)
espBtn.Position = UDim2.new(0.05, 0, 0.65, 0)
espBtn.BackgroundColor3 = Color3.fromRGB(150, 80, 250)
espBtn.TextColor3 = Color3.new(1,1,1)
espBtn.Parent = leftCol

-- Right column: Admin player list
local rightCol = Instance.new("Frame")
rightCol.Size = UDim2.new(0, 200, 1, -40)
rightCol.Position = UDim2.new(0, 210, 0, 40)
rightCol.BackgroundTransparency = 1
rightCol.Parent = frame

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(0.9, 0, 0, 30)
searchBox.Position = UDim2.new(0.05, 0, 0, 0)
searchBox.PlaceholderText = "Search player..."
searchBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
searchBox.Font = Enum.Font.SourceSans
searchBox.TextSize = 16
searchBox.Parent = rightCol

local playerList = Instance.new("ScrollingFrame")
playerList.Size = UDim2.new(0.9, 0, 1, -40)
playerList.Position = UDim2.new(0.05, 0, 0, 40)
playerList.BackgroundTransparency = 1
playerList.ScrollBarThickness = 6
playerList.Parent = rightCol

local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 6)
listLayout.Parent = playerList

--// Fly + Jump Vars
local flying = false
local speed = 50
local acceleration = 5
local keys = {W=false,A=false,S=false,D=false,Space=false,Shift=false}
local playerFlyStates = {}
local playerJumpStates = {}

-- Jump boost levels
local defaultJump = humanoid.UseJumpPower and humanoid.JumpPower or humanoid.JumpHeight
local levels = {"Low","Normal","High"}
local boosts = {defaultJump*0.7, defaultJump, defaultJump*1.8}
local jIndex = 2

-- ESP Vars
local espEnabled = false
local espObjects = {}

--// Fly Helpers
local function createFly(targetPlayer)
	local tChar = targetPlayer.Character
	if not tChar then return end
	local tHrp = tChar:FindFirstChild("HumanoidRootPart")
	if not tHrp then return end

	local att = Instance.new("Attachment", tHrp)
	local lv = Instance.new("LinearVelocity", tHrp)
	lv.MaxForce = 1e6
	lv.Attachment0 = att
	lv.RelativeTo = Enum.ActuatorRelativeTo.World

	local align = Instance.new("AlignOrientation", tHrp)
	align.Attachment0 = att
	align.Mode = Enum.OrientationAlignmentMode.OneAttachment
	align.Responsiveness = 200

	playerFlyStates[targetPlayer] = {lv=lv, att=att, align=align, speed=speed}
end

local function destroyFly(targetPlayer)
	local state = playerFlyStates[targetPlayer]
	if state then
		if state.lv then state.lv:Destroy() end
		if state.att then state.att:Destroy() end
		if state.align then state.align:Destroy() end
		playerFlyStates[targetPlayer] = nil
	end
end

local function toggleFly()
	flying = not flying
	if flying then
		createFly(player)
		toggleBtn.Text = "Flying (Click to Stop)"
	else
		destroyFly(player)
		toggleBtn.Text = "Toggle Fly"
	end
end

-- Jump Boost Apply
local function applyJumpBoost(targetPlayer, levelIndex)
	local tChar = targetPlayer.Character
	if not tChar then return end
	local tHum = tChar:FindFirstChildOfClass("Humanoid")
	if not tHum then return end
	if tHum.UseJumpPower then
		tHum.JumpPower = boosts[levelIndex]
	else
		tHum.JumpHeight = boosts[levelIndex]
	end
	playerJumpStates[targetPlayer] = levelIndex
end

-- ESP Functions
local function toggleESP()
	espEnabled = not espEnabled
	espBtn.Text = "ESP: " .. (espEnabled and "ON" or "OFF")

	if not espEnabled then
		for _, h in pairs(espObjects) do h:Destroy() end
		espObjects = {}
	else
		for _, p in pairs(Players:GetPlayers()) do
			if p ~= player and p.Character then
				local highlight = Instance.new("Highlight", p.Character)
				highlight.FillColor = Color3.fromRGB(255, 0, 0)
				espObjects[p] = highlight
			end
		end
	end
end

--// Player List
local function createPlayerEntry(p)
	local entry = Instance.new("Frame")
	entry.Size = UDim2.new(1, 0, 0, 60)
	entry.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	entry.Parent = playerList

	local nameLabel = Instance.new("TextLabel")
	nameLabel.Size = UDim2.new(0.6, -6, 1, 0)
	nameLabel.Position = UDim2.new(0, 6, 0, 0)
	nameLabel.Text = p.Name
	nameLabel.TextXAlignment = Enum.TextXAlignment.Left
	nameLabel.BackgroundTransparency = 1
	nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	nameLabel.Font = Enum.Font.SourceSans
	nameLabel.TextSize = 16
	nameLabel.Parent = entry

	local flyBtn = Instance.new("TextButton")
	flyBtn.Size = UDim2.new(0.38, -6, 0.4, -4)
	flyBtn.Position = UDim2.new(0.62, 0, 0.1, 0)
	flyBtn.Text = playerFlyStates[p] and "Stop Fly" or "Start Fly"
	flyBtn.BackgroundColor3 = Color3.fromRGB(80, 150, 250)
	flyBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
	flyBtn.Font = Enum.Font.SourceSans
	flyBtn.TextSize = 14
	flyBtn.Parent = entry

	local jumpBtn2 = Instance.new("TextButton")
	jumpBtn2.Size = UDim2.new(0.38, -6, 0.4, -4)
	jumpBtn2.Position = UDim2.new(0.62, 0, 0.55, 0)
	jumpBtn2.Text = "Cycle Jump"
	jumpBtn2.BackgroundColor3 = Color3.fromRGB(250, 150, 80)
	jumpBtn2.TextColor3 = Color3.fromRGB(255, 255, 255)
	jumpBtn2.Font = Enum.Font.SourceSans
	jumpBtn2.TextSize = 14
	jumpBtn2.Parent = entry

	flyBtn.MouseButton1Click:Connect(function()
		if playerFlyStates[p] then
			destroyFly(p)
			flyBtn.Text = "Start Fly"
		else
			createFly(p)
			flyBtn.Text = "Stop Fly"
		end
	end)

	jumpBtn2.MouseButton1Click:Connect(function()
		local current = playerJumpStates[p] or 2
		local nextIdx = current % #levels + 1
		applyJumpBoost(p, nextIdx)
		jumpBtn2.Text = "Jump: " .. levels[nextIdx]
	end)

	return entry
end

local function refreshPlayerList(filter)
	playerList:ClearAllChildren()
	local y = 0
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player then
			if not filter or filter == "" or p.Name:lower():find(filter:lower()) then
				createPlayerEntry(p)
				y = y + 66
			end
		end
	end
	playerList.CanvasSize = UDim2.new(0, 0, 0, y)
end

--// Button Events
toggleBtn.MouseButton1Click:Connect(toggleFly)

jumpBtn.MouseButton1Click:Connect(function()
	jIndex = jIndex % #levels + 1
	applyJumpBoost(player, jIndex)
	jumpBtn.Text = "Jump Boost: " .. levels[jIndex]
end)

plusBtn.MouseButton1Click:Connect(function()
	speed += 10
	speedLabel.Text = "Speed: " .. speed
	for _, state in pairs(playerFlyStates) do state.speed = speed end
end)

minusBtn.MouseButton1Click:Connect(function()
	if speed > 10 then
		speed -= 10
		speedLabel.Text = "Speed: " .. speed
		for _, state in pairs(playerFlyStates) do state.speed = speed end
	end
end)

espBtn.MouseButton1Click:Connect(toggleESP)

searchBox:GetPropertyChangedSignal("Text"):Connect(function()
	refreshPlayerList(searchBox.Text)
end)

--// Movement Keys
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.W then keys.W = true end
	if input.KeyCode == Enum.KeyCode.S then keys.S = true end
	if input.KeyCode == Enum.KeyCode.A then keys.A = true end
	if input.KeyCode == Enum.KeyCode.D then keys.D = true end
	if input.KeyCode == Enum.KeyCode.Space then keys.Space = true end
	if input.KeyCode == Enum.KeyCode.LeftShift then keys.Shift = true end
	if input.KeyCode == Enum.KeyCode.LeftControl then frame.Visible = not frame.Visible end
end)

UIS.InputEnded:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.W then keys.W = false end
	if input.KeyCode == Enum.KeyCode.S then keys.S = false end
	if input.KeyCode == Enum.KeyCode.A then keys.A = false end
	if input.KeyCode == Enum.KeyCode.D then keys.D = false end
	if input.KeyCode == Enum.KeyCode.Space then keys.Space = false end
	if input.KeyCode == Enum.KeyCode.LeftShift then keys.Shift = false end
end)

--// Fly Loop
RS.RenderStepped:Connect(function(dt)
	for targetPlayer, state in pairs(playerFlyStates) do
		if state.lv and state.att then
			local tChar = targetPlayer.Character
			if tChar then
				local tHrp = tChar:FindFirstChild("HumanoidRootPart")
				if tHrp then
					local cam = targetPlayer == player and workspace.CurrentCamera or tHrp.CFrame
					local dir = Vector3.zero
					if targetPlayer == player then
						if keys.W then dir += cam.LookVector end
						if keys.S then dir -= cam.LookVector end
						if keys.A then dir -= cam.RightVector end
						if keys.D then dir += cam.RightVector end
						if keys.Space then dir += cam.UpVector end
						if keys.Shift then dir -= cam.UpVector end
					end
					if dir.Magnitude > 0 then dir = dir.Unit end
					local targetVel = dir * state.speed
					state.lv.VectorVelocity = state.lv.VectorVelocity:Lerp(targetVel, math.clamp(acceleration*dt, 0, 1))
					state.align.CFrame = cam.CFrame
				else
					destroyFly(targetPlayer)
				end
			else
				destroyFly(targetPlayer)
			end
		end
	end
end)

--// Player Join/Leave
Players.PlayerAdded:Connect(function(p)
	refreshPlayerList(searchBox.Text)
	if espEnabled then
		p.CharacterAdded:Connect(function(c)
			local highlight = Instance.new("Highlight", c)
			highlight.FillColor = Color3.fromRGB(255,0,0)
			espObjects[p] = highlight
		end)
	end
end)

Players.PlayerRemoving:Connect(function(p)
	destroyFly(p)
	playerJumpStates[p] = nil
	if espObjects[p] then
		espObjects[p]:Destroy()
		espObjects[p] = nil
	end
	refreshPlayerList(searchBox.Text)
end)

--// Initial
refreshPlayerList()
